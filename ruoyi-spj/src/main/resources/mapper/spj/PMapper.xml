<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.spj.mapper.PMapper">
    
    <resultMap type="P" id="PResult">
        <result property="pno"    column="pno"    />
        <result property="pname"    column="pname"    />
        <result property="color"    column="color"    />
        <result property="weight"    column="weight"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectPVo">
        select pno, pname, color, weight, create_by, create_time, update_by, update_time, remark from P
    </sql>

    <select id="selectPList" parameterType="P" resultMap="PResult">
        <include refid="selectPVo"/>
        <where>  
            <if test="pno != null  and pno != ''"> and pno = #{pno}</if>
            <if test="pname != null  and pname != ''"> and pname like concat('%', #{pname}, '%')</if>
            <if test="color != null  and color != ''"> and color = #{color}</if>
            <if test="weight != null "> and weight = #{weight}</if>
        </where>
    </select>
    
    <select id="selectPByPno" parameterType="String" resultMap="PResult">
        <include refid="selectPVo"/>
        where pno = #{pno}
    </select>
        
    <insert id="insertP" parameterType="P">
        insert into P
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pno != null">pno,</if>
            <if test="pname != null">pname,</if>
            <if test="color != null">color,</if>
            <if test="weight != null">weight,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pno != null">#{pno},</if>
            <if test="pname != null">#{pname},</if>
            <if test="color != null">#{color},</if>
            <if test="weight != null">#{weight},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateP" parameterType="P">
        update P
        <trim prefix="SET" suffixOverrides=",">
            <if test="pname != null">pname = #{pname},</if>
            <if test="color != null">color = #{color},</if>
            <if test="weight != null">weight = #{weight},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where pno = #{pno}
    </update>

    <delete id="deletePByPno" parameterType="String">
        delete from P where pno = #{pno}
    </delete>

    <delete id="deletePByPnos" parameterType="String">
        delete from P where pno in 
        <foreach item="pno" collection="array" open="(" separator="," close=")">
            #{pno}
        </foreach>
    </delete>
</mapper>