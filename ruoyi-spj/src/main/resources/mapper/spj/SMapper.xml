<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.spj.mapper.SMapper">
    
    <resultMap type="S" id="SResult">
        <result property="sno"    column="sno"    />
        <result property="sname"    column="sname"    />
        <result property="status"    column="status"    />
        <result property="city"    column="city"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectSVo">
        select sno, sname, status, city, create_by, create_time, update_by, update_time, remark from S
    </sql>

    <select id="selectSList" parameterType="S" resultMap="SResult">
        <include refid="selectSVo"/>
        <where>  
            <if test="sno != null  and sno != ''"> and sno = #{sno}</if>
            <if test="sname != null  and sname != ''"> and sname like concat('%', #{sname}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="city != null  and city != ''"> and city = #{city}</if>
        </where>
    </select>
    
    <select id="selectSBySno" parameterType="String" resultMap="SResult">
        <include refid="selectSVo"/>
        where sno = #{sno}
    </select>
        
    <insert id="insertS" parameterType="S">
        insert into S
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sno != null">sno,</if>
            <if test="sname != null">sname,</if>
            <if test="status != null">status,</if>
            <if test="city != null">city,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sno != null">#{sno},</if>
            <if test="sname != null">#{sname},</if>
            <if test="status != null">#{status},</if>
            <if test="city != null">#{city},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateS" parameterType="S">
        update S
        <trim prefix="SET" suffixOverrides=",">
            <if test="sname != null">sname = #{sname},</if>
            <if test="status != null">status = #{status},</if>
            <if test="city != null">city = #{city},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where sno = #{sno}
    </update>

    <delete id="deleteSBySno" parameterType="String">
        delete from S where sno = #{sno}
    </delete>

    <delete id="deleteSBySnos" parameterType="String">
        delete from S where sno in 
        <foreach item="sno" collection="array" open="(" separator="," close=")">
            #{sno}
        </foreach>
    </delete>
</mapper>